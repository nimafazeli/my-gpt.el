#+TITLE: my-gpt: Emacs Org-mode Integration for AI Language Models
#+AUTHOR: Your Name
#+DATE: [2024-05-15 Wed]

* Introduction
  ~my-gpt~ is an Emacs package that integrates AI language models (currently OpenAI's GPT and Perplexity AI) into Org-mode. It allows you to interact with these AI services directly from your Org documents using org-babel code blocks.

* Installation
  1. Ensure you have Emacs 27.1 or later installed.
  2. Place the ~my-gpt.el~ file in your Emacs load path.
  3. Add the following to your Emacs configuration:

     #+begin_src emacs-lisp
     (require 'my-gpt)
     (add-to-list 'org-babel-load-languages '(my-gpt . t))
     (org-babel-do-load-languages 'org-babel-load-languages org-babel-load-languages)
     #+end_src

  4. Set up your API keys in the =~/.authinfo.gpg= file:

     #+begin_example
     machine api.openai.com login org-ai password YOUR_OPENAI_API_KEY
     machine api.perplexity.ai login org-ai password YOUR_PERPLEXITY_API_KEY
     #+end_example

* Basic Usage
  To use ~my-gpt~ in an Org document, create a code block with the ~my-gpt~ language:

  #+begin_src org
  ,#+begin_src my-gpt
  What is the capital of France?
  ,#+end_src
  #+end_src

  Execute the block with ~C-c C-c~, and the AI's response will appear below the block.

* Features and Advanced Usage

** Specifying the AI Service
   Use the ~:service~ header argument to choose between OpenAI and Perplexity:

   #+begin_src my-gpt :service openai
   Describe emacs in one sentence.
   #+end_src

   #+RESULTS:
   : Emacs is a highly customizable, open-source text editor that features a wide range of functions beyond just editing, such as email and news reader, file manager, web browser, and environment for programming in multiple languages.



   #+begin_src my-gpt :service perplexity :results output
   What was the closing value of SPY in the past three days? Give me only an org-mode table of the results (without the backtick code guards of gfm).
   #+end_src

   #+RESULTS:
   : | Date       | Closing Value |
   : |------------|---------------|
   : | Aug 27, 2024 | $561.56      |
   : | Aug 26, 2024 | $559.49      |
   : | Aug 25, 2024 | $559.61      |
   : 
   : Note: The closing values are based on the available historical data from the sources provided. For August 25, 2024, the closest available data point is used, as the exact value for that day is not directly provided in the sources.

** Setting the AI Model
   Specify the model using the ~:model~ header argument:

   #+begin_src my-gpt :service openai :model gpt-4o
   Write a haiku about work.
   #+end_src

   #+RESULTS:
   : Paper trails expand,
   : In the glow of the screen light,
   : Purpose meets demand.

   
   #+begin_src my-gpt :service perplexity :model llama-3.1-sonar-large-128k-online
   What is the current price of Bitcoin?
   #+end_src

   #+RESULTS:
   : The current price of Bitcoin as of August 27, 2024, is approximately $62,418.47. However, other sources provide slightly different values:
   : 
   : - **$62,418.47** (as of 8 a.m. ET on August 27, 2024)
   : - **$62,880.66** (as of August 26, 2024)
   : - **$62,827.83** (as of August 27, 2024)
   : - **$62,922.59** (historical data for August 27, 2024)
   : 
   : These values reflect the dynamic nature of the cryptocurrency market, which can fluctuate constantly due to various factors such as market demand, investor sentiment, regulatory changes, and macroeconomic trends.

   
** Using persistent Sessions
   Use the ~:session~ header argument to maintain context across multiple code blocks:

   #+begin_src my-gpt :service perplexity :session test :results output
   What was the closing value of SPY in the past three days? Give me only an org-mode table of the results in raw format without markdown guards and any other text explanations.
   #+end_src

   #+RESULTS:
   : | Date       | Close |
   : |------------|-------|
   : | Aug 26, 2024 | 561.25 |
   : | Aug 25, 2024 | 560.29 |
   : | Aug 24, 2024 | 559.61 |
   : 
   : Note: The closing values are based on the provided sources and.

   
   #+begin_src my-gpt :service perplexity :session test :results output
   Give me a link to the chart of the data
   #+end_src

   #+RESULTS:
   : You can find the historical price chart for SPY on various financial websites. Here are a few links:
   : 
   : 1. **TradingView**: [SPY Chart â€” SPDR S&P 500 ETF Trust](https://www.tradingview.com/symbols/AMEX-SPY/)
   : 2. **Yahoo Finance**: [SPY Price: 561.25 for Aug. 27, 2024 - YCharts](https://ycharts.com/companies/SPY/price)
   : 3. **WSJ Market Data**: [SPDR S&P 500 ETF Trust Historical Prices](https://www.wsj.com/market-data/quotes/etf/SPY/historical-prices)
   : 
   : These links provide interactive charts that display the historical price data for SPY.

** Using System directives

It is possible to give a system directive that can persist within a subtree

*** AI Conversations
:PROPERTIES:
:SYSTEM: You are a helpful assistant in haskell programming. Your provide simple, readable and transparent code. Provide concise and efficient code. When providing code, you provide code and only code. No extra prose and explanation. 
:END:

#+begin_src my-gpt :session haskell
Provide an example of using list comprehensions.
#+end_src

#+RESULTS:
: ```haskell
: squares = [x^2 | x <- [1..10]]
: ```


#+begin_src my-gpt :session haskell
Provide another example of using list comprehensions.
#+end_src

#+RESULTS:
: ```haskell
: [x**2 | x <- [1..10], x**2 > 3]
: ```

*** Python Programming
:PROPERTIES:
:SYSTEM: You are a Python programming expert. Provide concise and efficient code. When providing code, you provide code and only code. No extra prose and explanation. 
:END:


#+begin_src my-gpt :session python
Now provide an example of using list comprehensions.
#+end_src

#+RESULTS:
: squared_numbers = [number**2 for number in range(10)]
   

#+begin_src my-gpt :session python
Provide another example.
#+end_src

#+RESULTS:
: even_numbers = [n for n in range(20) if n % 2 == 0]

* Conclusion
  ~my-gpt~ provides a flexible and powerful way to integrate AI language models into your Org-mode workflow. From simple queries to complex, context-aware interactions, you can leverage the power of AI directly within your documents.

  For more information or to report issues, please visit the project repository: [Your Repository URL]

  Happy AI-assisted note-taking and writing!
